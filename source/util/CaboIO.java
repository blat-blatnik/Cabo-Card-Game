package util;

import model.CaboGame;
import model.turnphase.TurnPhase;
import view.Panel;
import view.SoundPlayer;

import java.io.*;

/**
 * @author Boris
 * @version 2.0
 *
 * CaboIO is used for serialization/deserialization of the CaboGame state. When the CaboPanel closes, the current state
 * of the CaboGame is serialized to an auto-save file. This auto-save is then used to load back the game state when the
 * program is next run. CaboIO will also serialize the state of the SoundPlayer so that the sound on/off option persists
 * across program runs.
 *
 * @see CaboGame
 * @see SoundPlayer
 * @see Panel
 */
public class CaboIO {

    private static final String SAVE_DIRECTORY_NAME = "savedgames";
    private static final String AUTO_SAVE_NAME = "autosave.ser";

    //NOTE(Boris): Returns null if it couldn't load.

    /**
     * De-serialize the CaboGame from the auto-save file - if one exists, and it isn't corrupted. This will also load
     * the user last option for sound on/off into SoundPlayer so that this option persists across program runs. The
     * auto-save file is generated by saveCaboGame().
     *
     * @return The CaboGame loaded from the auto-save, or null if the load was unsuccessful.
     * @see CaboGame
     * @see SoundPlayer
     */
    public static CaboGame tryLoadAutoSave() {
        try (FileInputStream fileInputStream = new FileInputStream(SAVE_DIRECTORY_NAME + "/" + AUTO_SAVE_NAME)) {
            ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
            CaboGame loadedGame = (CaboGame)objectInputStream.readObject();
            boolean soundIsOn = (Boolean)objectInputStream.readObject();
            SoundPlayer.setSoundIsOn(soundIsOn);
            System.out.println("Auto-save loaded successfully!");

            //NOTE(Boris): TurnPhase is observed by the game but that means that the observable part of
            // TurnPhase isn't serialized! Calling game.setTurnPhase() will add the game as an observer
            // of the "new" turn phase that we just de-serialized.

            loadedGame.setTurnPhase((TurnPhase)loadedGame.getTurnPhase().clone());
            return loadedGame;

        } catch (IOException | ClassNotFoundException e) {
            if (!(e instanceof FileNotFoundException))
                System.err.println("Couldn't load Cabo game from auto-save: " + e.getLocalizedMessage());
            return new CaboGame();
        }
    }

    /**
     * Serializes the state of the given CaboGame to the auto-save file - overwriting it if it already exists. The
     * current state of the SoundPlayer (on/off) is also saved in the auto-save file. Both of these will then be loaded
     * by loadCaboGame(). Note that this serialization may fail for any number of reasons in which case it is possible
     * that no auto-save is made.
     *
     * @param game The CaboGame to serialize to the auto-save file.
     */
    public static void saveCaboGame(CaboGame game) {

        File saveDirectory = new File(SAVE_DIRECTORY_NAME);
        saveDirectory.mkdir();

        try (FileOutputStream fileOutputStream = new FileOutputStream(SAVE_DIRECTORY_NAME + "/" + AUTO_SAVE_NAME)) {
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);
            objectOutputStream.writeObject(game);
            //NOTE(Boris): write/readBoolean() doesn't work here for some reason but write/readObject() does.
            objectOutputStream.writeObject(SoundPlayer.soundIsOn());
            System.out.println("Auto-save successful!");
        } catch (IOException e) {
            System.err.println("Couldn't save game: " + e.getLocalizedMessage());
        }
    }
}